##############################################################################
# kernel parameters settings
##############################################################################

# Histórico de revisão:
# 13/03/2024 - Everton Agilar - Configuração inicial
# 09/06/2024 - Everton Agilar - Tunning com as recomendações do manual do HaProxy
#


# Habilitar o redirecionamento de pacotes
net.ipv4.ip_forward = 1
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1

# Aumentar o número máximo de sockets
# Serves as a higher bound for all of the system's SYN backlogs. Put it at
# least as high as tcp_max_syn_backlog, otherwise clients may experience
# difficulties to connect at high rates or under SYN attacks. Default: 128
net.core.somaxconn = 65535

# Aumentar o número máximo de portas de rede
# Extend the source port range for outgoing TCP connections. This limits early
# port reuse and makes use of 64000 source ports. Defaults: 32768 61000
net.ipv4.ip_local_port_range = 1024 65535

# Habilitar o redirecionamento de pacotes entre diferentes interfaces de rede
net.ipv4.conf.all.forwarding = 1

# Aumentar o número máximo de entradas na tabela ARP:
net.ipv4.neigh.default.gc_thresh3 = 4096

# Desativar o roteamento de pacotes de redirecionamento:
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

# Aumentar o tamanho máximo do buffer de recepção
net.core.rmem_max = 16777216

# Aumentar o tamanho máximo do buffer de envio
net.core.wmem_max = 16777216

# Aumentar o tamanho máximo do buffer de recepção do UDP
net.core.rmem_default = 262144

# Aumentar o tamanho máximo do buffer de envio do UDP
net.core.wmem_default = 262144

# Aumentar o tamanho do buffer de recepção do kernel:
net.core.rmem_max = 16777216

# Aumentar o tamanho do buffer de transmissão do kernel:
net.core.wmem_max = 16777216

# Aumentar o tamanho do buffer de recepção da interface de rede:
net.core.rmem_default = 16777216

# Aumentar o tamanho do buffer de transmissão da interface de rede:
net.core.wmem_default = 16777216

# Aumentar o número máximo de processos
fs.file-max = 2097152

# inotify
fs.inotify.max_queued_events = 16384
fs.inotify.max_user_instances = 256
fs.inotify.max_user_watches = 524288

# Limit the per-socket default receive/send buffers to limit memory usage
# when running with a lot of concurrent connections. Values are in bytes
# and represent minimum, default and maximum. Defaults: 4096 87380 4194304
#
net.ipv4.tcp_rmem = 4096 16060 262144
net.ipv4.tcp_wmem = 4096 16384 262144

# Allow early reuse of a same source port for outgoing connections. It is
# required above a few hundred connections per second. Defaults: 0
#
net.ipv4.tcp_tw_reuse = 1


# Increase the TCP SYN backlog size. This is generally required to support very
# high connection rates as well as to resist SYN flood attacks. Setting it too
# high will delay SYN cookie usage though. Defaults: 1024
#
net.ipv4.tcp_max_syn_backlog = 60000


# Timeout in seconds for the TCP FIN_WAIT state. Lowering it speeds up release
# of dead connections, though it will cause issues below 25-30 seconds. It is
# preferable not to change it if possible. Default: 60
#
net.ipv4.tcp_fin_timeout = 30


# Limit the number of outgoing SYN-ACK retries. This value is a direct
# amplification factor of SYN floods, so it is important to keep it reasonably
# low. However, too low will prevent clients on lossy networks from connecting.
# Using 3 as a default value gives good results (4 SYN-ACK total) and lowering
# it to 1 under SYN flood attack can save a lot of bandwidth. Default: 5
#
net.ipv4.tcp_synack_retries = 3


# Set this to one to allow local processes to bind to an IP which is not yet
# present on the system. This is typically what happens with a shared VRRP
# address, where you want both primary and backup to be started even though the
# IP is not yet present. Always leave it to 1. Default: 0
#
net.ipv4.ip_nonlocal_bind = 1

